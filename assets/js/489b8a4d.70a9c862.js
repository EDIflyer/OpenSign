"use strict";(self.webpackChunkOpenSign_Docs=self.webpackChunkOpenSign_Docs||[]).push([[8781],{44907:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>x,frontMatter:()=>l,metadata:()=>c,toc:()=>h});var t=s(85893),i=s(11151),r=s(22004),o=s.n(r);const l={title:"Localhost Setup with Docker"},d=void 0,c={id:"self-host/docker/run-locally",title:"Localhost Setup with Docker",description:"Steps to run OpenSign\u2122 with docker in windows:",source:"@site/docs/self-host/docker/run-locally.md",sourceDirName:"self-host/docker",slug:"/self-host/docker/run-locally",permalink:"/docs/self-host/docker/run-locally",draft:!1,unlisted:!1,editUrl:"https://github.com/opensignlabs/opensign/tree/feat-docs/docs/docs/self-host/docker/run-locally.md",tags:[],version:"current",frontMatter:{title:"Localhost Setup with Docker"},sidebar:"selfhostSidebar",previous:{title:"Docker",permalink:"/docs/category/docker"},next:{title:"Digital Ocean",permalink:"/docs/self-host/One-click-Install/DigitalOcean"}},a={},h=[{value:"Steps to run OpenSign\u2122 with docker in windows:",id:"steps-to-run-opensign-with-docker-in-windows",level:2},{value:"Setup OpenSign\u2122 with Docker on Localhost",id:"setup-opensign-with-docker-on-localhost",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"steps-to-run-opensign-with-docker-in-windows",children:"Steps to run OpenSign\u2122 with docker in windows:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Setup WSL 2 in windows. To install WSL 2 refer below video"}),"\n"]}),"\n",(0,t.jsx)("div",{children:(0,t.jsx)(o(),{playing:!0,controls:!0,url:"https://youtu.be/1kFFwknneD8?si=FKriXPwFqZPLUagI"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"You must have to install docker desktop in windows."}),"\n",(0,t.jsxs)(n.li,{children:["Enable wsl in docker desktop on this path ",(0,t.jsx)(n.code,{children:"Setting > Resources > WSL Inegration"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://legadratw3d.ams3.cdn.digitaloceanspaces.com/Screenshot%202024-02-23%20201448.png",alt:"docker"})}),"\n",(0,t.jsxs)(n.ol,{start:"4",children:["\n",(0,t.jsxs)(n.li,{children:["Clone repository from ",(0,t.jsx)(n.a,{href:"https://github.com/OpenSignLabs/OpenSign",children:"opensign\u2122 github"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Go to your desired destination in your windows then open powershell in that folder using ",(0,t.jsx)(n.code,{children:"Shift + right click of mouse"})," and select powersehll option from options."]}),"\n",(0,t.jsxs)(n.li,{children:["Open powershell and tyoe ",(0,t.jsx)(n.code,{children:"git clone <repo url>"})," and hit ",(0,t.jsx)(n.code,{children:"Enter"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Then open OpenSign folder with vs code and go to ",(0,t.jsx)(n.code,{children:"apps > mongo > mongo-init.sh"})," and change type of this file from ",(0,t.jsx)(n.code,{children:"CRLF"})," to ",(0,t.jsx)(n.code,{children:"LF"})," and then save this file."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://legadratw3d.ams3.cdn.digitaloceanspaces.com/Screenshot%202024-02-23%20175944.png",alt:"docker"})}),"\n",(0,t.jsxs)(n.ol,{start:"8",children:["\n",(0,t.jsxs)(n.li,{children:["Open ubuntu/WSL terminal and write command to navigate to folder where you have clone OpenSign project for e.g. ",(0,t.jsx)(n.code,{children:"cd mnt/c/testing/docker/OpenSign"})," and hit ",(0,t.jsx)(n.code,{children:"Enter"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Now type command ",(0,t.jsx)(n.code,{children:"Make build"})," and it will start build image for docker it will take some time and then run. for more specific steps watch below video."]}),"\n"]}),"\n",(0,t.jsx)("div",{children:(0,t.jsx)(o(),{playing:!0,controls:!0,url:"https://www.youtube.com/watch?v=GY_OP697EiU"})}),"\n",(0,t.jsx)(n.h2,{id:"setup-opensign-with-docker-on-localhost",children:"Setup OpenSign\u2122 with Docker on Localhost"}),"\n",(0,t.jsx)(n.p,{children:"To set up OpenSign\u2122 locally using Docker, the following prerequisites are required:"}),"\n",(0,t.jsx)(n.p,{children:"Environment Varaibles:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Environment Varibale"}),(0,t.jsx)(n.th,{children:"Value"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"CI"}),(0,t.jsx)(n.td,{children:"false"}),(0,t.jsx)(n.td,{children:"Set CI to false while running the app locally"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"PUBLIC_URL"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"http://localhost:3000",children:"http://localhost:3000"})}),(0,t.jsx)(n.td,{children:"Set it to the URL form where the app home page will be accessed"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"GENERATE_SOURCEMAP"}),(0,t.jsx)(n.td,{children:"false"}),(0,t.jsx)(n.td,{children:"Set it to true if you want to generate the Sourcemap for debugging"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"REACT_APP_SERVERURL"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"http://localhost:8080/app",children:"http://localhost:8080/app"})}),(0,t.jsx)(n.td,{children:"Set it to the URL from where APIs will be accessible, for local development it should be localhost:8080/app (use your local port number instead)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"REACT_APP_APPID"}),(0,t.jsx)(n.td,{children:"opensignstgn"}),(0,t.jsx)(n.td,{children:"A 12 character long random app identifier. The value of this should be same as APP_ID which is a variable used by backend API."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"APP_ID"}),(0,t.jsx)(n.td,{children:"opensignstgn"}),(0,t.jsx)(n.td,{children:"A 12 character long random app identifier. The value of this should be same as REACT_APP_APPID which is a variable used by Frontend React App."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"appName"}),(0,t.jsx)(n.td,{children:"open_sign_server"}),(0,t.jsx)(n.td,{children:"Name of the app. It will be visible in the verification emails sent out."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"MASTER_KEY"}),(0,t.jsx)(n.td,{children:"XnAadwKxxByMr"}),(0,t.jsx)(n.td,{children:"A 12 character long random secret key that allows access to all the data. It is used in Parse dashboard config to view all the data in the database."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"MONGODB_URI"}),(0,t.jsx)(n.td,{children:"mongodb://host.docker.internal:27017/OpenSignDB"}),(0,t.jsx)(n.td,{children:"Mongodb URI to connect to"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"PARSE_MOUNT"}),(0,t.jsx)(n.td,{children:"/app"}),(0,t.jsx)(n.td,{children:"Path on which APIs should be mounted. Do not change this. This variable shall be removed & value hardcoded in the source code in coming versions."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"SERVER_URL"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"http://localhost:8080/app",children:"http://localhost:8080/app"})}),(0,t.jsx)(n.td,{children:"Set it to the URL from where APIs will be accessible to the NodeJS functions, for local development it should be localhost:8080/app (use your local port number instead)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"DO_SPACE"}),(0,t.jsx)(n.td,{children:"DOSPACENAME"}),(0,t.jsx)(n.td,{children:"Digital ocean space name or AWS S3 bucket name for uploading documents"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"DO_ENDPOINT"}),(0,t.jsx)(n.td,{children:"ams3.digitaloceanspaces.com"}),(0,t.jsx)(n.td,{children:"Digital ocean spaces endpoint or AWS S3 endpoint for uploading documents"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"DO_BASEURL"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://DOSPACENAME.ams3.digitaloceanspaces.com",children:"https://DOSPACENAME.ams3.digitaloceanspaces.com"})}),(0,t.jsx)(n.td,{children:"Digital ocean baseurl or AWS S3 base URL"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"DO_ACCESS_KEY_ID"}),(0,t.jsx)(n.td,{children:"YOUR_S3_ACCESS_ID"}),(0,t.jsx)(n.td,{children:"Digital ocean spaces access key ID or AWS s3 Access key ID for uploading the docs"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"DO_SECRET_ACCESS_KEY"}),(0,t.jsx)(n.td,{children:"YOUR_S3_ACCESS_KEY"}),(0,t.jsx)(n.td,{children:"Digital ocean spaces secret access key or AWS s3 secret access key for uploading the docs"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"DO_REGION"}),(0,t.jsx)(n.td,{children:"YOUR_S3_REGION"}),(0,t.jsx)(n.td,{children:"Digital ocean spaces region or AWS s3 region"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"USE_LOCAL"}),(0,t.jsx)(n.td,{children:"FALSE"}),(0,t.jsx)(n.td,{children:"To use local file storage to save file"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"MAILGUN_API_KEY"}),(0,t.jsx)(n.td,{children:"YOUR_MAILGUNAPI_KEY"}),(0,t.jsx)(n.td,{children:"Mailgun API Key"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"MAILGUN_DOMAIN"}),(0,t.jsx)(n.td,{children:"YOUR_MAILGUNAPI_DOMAIN"}),(0,t.jsx)(n.td,{children:"Mailgun API Domain"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"MAILGUN_SENDER"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"Mailgun Sender Mail ID"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"PFX_BASE64"}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"Base64 encoded PFX or p12 document signing certificate file. You can generate base64 encoded self sign certificate using the passphrase."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"PASS_PHRASE"}),(0,t.jsx)(n.td,{children:"opensign"}),(0,t.jsx)(n.td,{children:"Pass phrase of PFX or p12 document signing certificate file."})]})]})]}),"\n",(0,t.jsx)(n.h1,{id:"steps-to-generate-self-sign-certificate",children:"Steps to Generate Self Sign Certificate"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"# execute below command and use passphrase 'opensign'\nopenssl genrsa -des3 -out ./cert/local_dev.key 2048\nopenssl req -key ./cert/local_dev.key -new -x509 -days 365 -out ./cert/local_dev.crt\nopenssl pkcs12 -inkey ./cert/local_dev.key -in ./cert/local_dev.crt -export -out ./cert/local_dev.pfx\nopenssl base64 -in ./cert/local_dev.pfx -out ./cert/base64_pfx\n"})}),"\n",(0,t.jsx)(n.h1,{id:"cors-configuration",children:"CORS Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["As document storage is delegated to S3-compatible services that reside in a different host than the OpenSign one, document operations (loading, storing, deleting) are subject to ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Cross-origin_resource_sharing",children:"Cross-Origin Resource Sharing"})," restriction policies; as a consequence, OpenSign app may fail with (browser console) errors like the following:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Access to fetch at 'https://foo.nyc3.digitaloceanspaces.com/exported_file_4627_0000-00-00T00%3A45%3A43.344Z.pdf'\nfrom origin 'http://localhost:3000' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header\nis present on the requested resource. If an opaque response serves your needs, set the request's mode to\n'no-cors' to fetch the resource with CORS disabled.\n"})}),"\n",(0,t.jsx)(n.p,{children:"In order to address this, your document storage system must be instructed to accept requests from other hosts; below the relevant documentation links:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docs.digitalocean.com/products/spaces/how-to/configure-cors/",children:"How to Configure CORS on DigitalOcean Spaces"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docs.aws.amazon.com/AmazonS3/latest/userguide/enabling-cors-examples.html",children:"Configuring cross-origin resource sharing on AWS S3"})}),"\n"]}),"\n",(0,t.jsx)(n.h1,{id:"build-local-environment",children:"Build Local Environment"}),"\n",(0,t.jsx)(n.p,{children:"Command to build & run project (make sure that you have docker install and running) -"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Execute `make build``"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Note: this command only works on linux and mac. If you want to run it in windows use ",(0,t.jsx)(n.a,{href:"https://youtu.be/1kFFwknneD8?si=FKriXPwFqZPLUagI",children:"WSL system"}),"."]})]})}function x(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}}}]);